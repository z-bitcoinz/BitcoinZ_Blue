name: Security Audit

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  schedule:
    - cron: '0 0 * * 1' # Weekly on Monday

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  security-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run npm audit
        run: yarn audit --level moderate
        continue-on-error: true

      - name: Check for security vulnerabilities
        run: |
          echo "üîç Running basic security checks..."

          # Check for common security issues in package.json
          if grep -q "\"version\".*\".*\"" package.json; then
            echo "‚úÖ Package.json has version specified"
          fi

          # List installed packages with known vulnerabilities
          yarn audit --json > audit-results.json || true

          echo "üìä Security audit completed"
          echo "üìÑ Results saved to audit-results.json"
        continue-on-error: true

  rust-security-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check if Rust project exists
        run: |
          if [ -f "native/Cargo.toml" ]; then
            echo "‚úÖ Rust project found in native directory"
            echo "RUST_PROJECT_EXISTS=true" >> $GITHUB_ENV
          else
            echo "‚ö†Ô∏è No Rust project found, skipping Rust security audit"
            echo "RUST_PROJECT_EXISTS=false" >> $GITHUB_ENV
          fi

      - name: Setup Rust
        if: env.RUST_PROJECT_EXISTS == 'true'
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Install cargo audit
        if: env.RUST_PROJECT_EXISTS == 'true'
        run: cargo install cargo-audit

      - name: Run cargo audit
        if: env.RUST_PROJECT_EXISTS == 'true'
        run: cargo audit
        working-directory: ./native
        continue-on-error: true

      - name: Run cargo clippy
        if: env.RUST_PROJECT_EXISTS == 'true'
        run: cargo clippy --all-features -- -D warnings
        working-directory: ./native
        continue-on-error: true

  basic-virus-scan:
    runs-on: ubuntu-latest
    needs: [security-audit]
    steps:
      - uses: actions/checkout@v3

      - name: Basic security file scan
        run: |
          echo "üîç Running basic security file scan..."

          # Check for suspicious file patterns
          echo "üìÅ Checking for suspicious files..."
          find . -name "*.exe" -o -name "*.bat" -o -name "*.cmd" -o -name "*.scr" | head -10

          # Check file sizes
          echo "üìä Large files that might need review:"
          find . -size +10M -type f | head -5

          echo "‚úÖ Basic security scan completed"

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: |
            audit-results.json
        continue-on-error: true
