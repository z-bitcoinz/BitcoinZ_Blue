name: Security Audit

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  schedule:
    - cron: '0 0 * * 1' # Weekly on Monday

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  security-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Run npm audit
        run: yarn audit --level moderate
        continue-on-error: true

      - name: Check for security vulnerabilities
        run: |
          echo "🔍 Running basic security checks..."

          # Check for common security issues in package.json
          if grep -q "\"version\".*\".*\"" package.json; then
            echo "✅ Package.json has version specified"
          fi

          # List installed packages with known vulnerabilities
          yarn audit --json > audit-results.json || true

          echo "📊 Security audit completed"
          echo "📄 Results saved to audit-results.json"
        continue-on-error: true

  basic-code-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Basic code security scan
        run: |
          echo "🔍 Running basic code security scan..."

          # Check for common security patterns
          echo "🔒 Checking for potential security issues..."

          # Check for hardcoded secrets patterns
          if grep -r -i "password\|secret\|key\|token" --include="*.js" --include="*.ts" --include="*.json" . | grep -v node_modules | grep -v ".git" | head -5; then
            echo "⚠️ Found potential hardcoded secrets - please review"
          else
            echo "✅ No obvious hardcoded secrets found"
          fi

          # Check for eval usage
          if grep -r "eval(" --include="*.js" --include="*.ts" . | grep -v node_modules | head -3; then
            echo "⚠️ Found eval() usage - potential security risk"
          else
            echo "✅ No eval() usage found"
          fi

          # Check Rust project if exists
          if [ -f "native/Cargo.toml" ]; then
            echo "📦 Rust project found - listing dependencies:"
            cd native

            # Handle potential Cargo.lock version issues
            if [ -f "Cargo.lock" ]; then
              echo "ℹ️ Cargo.lock exists - checking version compatibility"
            fi

            grep -A 10 "\[dependencies\]" Cargo.toml || echo "No dependencies section"
            cd ..
          fi

          echo "✅ Basic code security scan completed"
        continue-on-error: true

  basic-virus-scan:
    runs-on: ubuntu-latest
    needs: [security-audit, basic-code-scan]
    steps:
      - uses: actions/checkout@v3

      - name: Basic security file scan
        run: |
          echo "🔍 Running basic security file scan..."

          # Check for suspicious file patterns
          echo "📁 Checking for suspicious files..."
          find . -name "*.exe" -o -name "*.bat" -o -name "*.cmd" -o -name "*.scr" | head -10

          # Check file sizes
          echo "📊 Large files that might need review:"
          find . -size +10M -type f | head -5

          echo "✅ Basic security scan completed"

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: |
            audit-results.json
        continue-on-error: true
